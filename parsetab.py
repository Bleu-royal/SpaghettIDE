
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AA48E7C0F050E343B0B76DF30A5438D5'
    
_lr_action_items = {'OR':([72,83,90,92,95,97,99,100,103,106,109,113,115,117,119,127,131,156,163,164,194,196,217,250,253,255,260,261,262,263,264,265,266,268,273,274,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-49,-33,-1,-2,195,-51,-3,-39,-47,-44,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,195,-35,-34,-48,-31,-30,-32,-52,-4,-50,-38,-37,-46,-45,-43,-42,-40,-41,-8,-6,-28,-20,]),'LEFT_OP':([72,83,90,92,95,99,100,103,113,115,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,277,278,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,205,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,-31,-30,-32,-4,-38,-37,205,205,205,205,-8,-6,-28,-20,]),'RETURN':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,91,-76,-187,91,-174,-173,-176,91,-190,-188,-175,-182,-177,-178,91,-191,-183,-189,-202,91,-200,-201,91,-184,91,-203,-179,-199,-185,91,-181,91,91,91,-180,-195,91,-194,-192,-197,91,91,-196,-198,-193,]),'LEFT_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,177,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'DO':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,74,-76,-187,74,-174,-173,-176,74,-190,-188,-175,-182,-177,-178,74,-191,-183,-189,-202,74,-200,-201,74,-184,74,-203,-179,-199,-185,74,-181,74,74,74,-180,-195,74,-194,-192,-197,74,74,-196,-198,-193,]),'TILD':([38,46,49,55,63,64,70,74,75,79,80,81,82,85,87,88,89,91,93,96,98,101,102,105,107,108,110,118,120,121,122,123,128,150,155,157,158,159,160,161,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,224,232,240,249,258,267,269,275,281,286,288,296,301,309,310,311,312,313,315,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,98,98,-76,98,-187,98,98,-174,-22,-173,-21,-176,98,-23,-190,98,-188,-175,-25,-182,-177,98,98,98,-178,98,98,-26,98,-24,98,98,98,98,98,98,98,98,98,-191,98,98,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,98,98,98,98,98,98,98,98,98,98,98,-200,98,98,98,-201,98,98,98,-184,98,98,98,98,98,98,98,98,98,98,-203,-179,98,-199,-185,98,-181,98,98,98,98,98,98,98,98,98,98,-180,-195,98,-194,-192,-197,98,98,-196,-198,-193,]),'DEC_OP':([38,46,49,55,63,64,70,72,74,75,79,80,81,82,83,85,87,88,89,91,93,96,98,100,101,102,103,105,107,108,110,113,118,120,121,122,123,127,128,150,155,157,158,159,160,161,163,164,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,224,232,240,249,250,253,255,258,267,269,273,275,281,286,288,296,301,309,310,311,312,313,314,315,316,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,75,75,-76,75,-187,-5,75,75,-174,-22,-173,-21,163,-176,75,-23,-190,75,-188,-175,-25,-1,-182,-177,-2,75,75,75,-178,-3,75,75,-26,75,-24,-1,75,75,75,75,75,75,75,75,-12,-11,75,-191,75,75,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,75,75,75,75,75,75,75,75,75,75,75,-200,75,75,75,-201,75,75,75,-184,75,75,75,75,75,75,75,75,75,75,-7,-9,-10,-203,-179,75,-4,-199,-185,75,-181,75,75,75,75,75,75,75,-8,75,-6,75,75,-180,-195,75,-194,-192,-197,75,75,-196,-198,-193,]),'UNION':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[3,-206,-207,-97,-91,-90,-95,-88,3,-96,-100,-93,-89,-102,-128,-98,3,-92,3,3,-129,-87,-103,-204,-131,-94,-99,-101,-132,3,-75,3,-186,3,-211,3,-130,3,3,-106,-123,-205,-76,3,-209,-187,-210,-182,3,3,-133,3,-135,-138,3,3,-109,3,3,-208,-183,-184,3,-134,-137,3,3,-136,-105,-110,3,-121,3,-185,3,-111,-104,-122,]),'PLUS':([38,46,49,55,63,64,70,72,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,105,107,108,110,113,118,120,121,122,123,127,128,131,150,155,156,157,158,159,160,161,163,164,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,224,232,240,249,250,253,255,258,261,262,264,265,266,267,269,273,275,277,278,281,286,288,296,301,309,310,311,312,313,314,315,316,317,318,319,320,321,334,336,339,340,344,345,346,347,348,349,],[-75,-186,88,88,-76,88,-187,-5,88,88,-174,-22,-173,-21,-15,-176,88,-23,-190,-29,88,-27,-188,188,-175,-25,-33,-1,-182,-177,-2,88,88,88,-178,-3,88,88,-26,88,-24,-1,88,-27,88,88,-17,88,88,88,88,88,-12,-11,88,-191,88,88,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,88,88,88,88,88,88,88,88,88,-18,88,-16,88,-200,88,88,88,-201,88,88,88,-184,88,88,88,88,88,-19,88,88,88,88,88,-7,-9,-10,-203,-35,-34,-31,-30,-32,-179,88,-4,-199,188,188,-185,88,-181,88,88,88,88,88,88,88,-8,88,-6,88,-28,88,-180,-20,-195,88,-194,-192,-197,88,88,-196,-198,-193,]),'BOOL':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[5,-206,-207,-97,-91,-90,-95,-88,5,-96,-100,-93,-89,-102,-128,-98,5,-92,5,5,-129,-87,-103,-204,-131,-94,-99,-101,-132,5,-75,5,-186,5,-211,5,-130,5,5,-106,-123,-205,-76,5,-209,-187,-210,-182,5,5,-133,5,-135,-138,5,5,-109,5,5,-208,-183,-184,5,-134,-137,5,5,-136,-105,-110,5,-121,5,-185,5,-111,-104,-122,]),'REGISTER':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,58,59,61,63,65,66,70,71,101,118,125,129,138,153,170,210,219,221,223,228,229,236,241,272,281,297,304,305,],[6,-206,-207,-97,-91,-90,-95,-88,6,-96,-100,-93,-89,-102,-128,-98,6,-92,6,6,-129,-87,-103,-204,-131,-94,-99,-101,-132,6,-75,6,-186,6,-211,6,-130,6,-106,-123,-205,-76,6,-209,-187,-210,-182,6,-133,-135,-138,-208,-183,-184,-134,-137,6,6,-136,-105,-121,6,-185,6,-104,-122,]),'L_HOOK':([5,6,7,8,9,10,12,13,15,16,17,18,19,20,21,22,24,25,26,27,29,31,32,33,35,42,43,44,51,52,53,54,58,59,67,68,125,129,133,138,139,141,198,219,221,223,225,227,229,230,235,236,241,271,272,292,293,295,304,305,322,323,324,325,328,341,342,],[-97,-91,-90,-95,-88,-139,-96,-100,-93,-89,-102,-128,-98,-81,-92,-77,-79,-129,-87,-103,55,-94,-99,-101,-132,-143,-141,-140,-82,-78,55,-80,-106,-123,-144,-142,-133,-135,224,-138,-115,-113,224,-134,-137,224,224,296,-136,-114,-112,-105,-121,224,224,-164,-160,296,-104,-122,-159,-165,-161,-162,-166,-163,-167,]),'WHILE':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,154,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,76,-76,-187,76,-174,-173,-176,76,-190,-188,-175,-182,-177,-178,76,245,-191,-183,-189,-202,76,-200,-201,76,-184,76,-203,-179,-199,-185,76,-181,76,76,76,-180,-195,76,-194,-192,-197,76,76,-196,-198,-193,]),'RIGHT_OP':([72,83,90,92,95,99,100,103,113,115,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,277,278,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,204,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,-31,-30,-32,-4,-38,-37,204,204,204,204,-8,-6,-28,-20,]),'INT':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[8,-206,-207,-97,-91,-90,-95,-88,8,-96,-100,-93,-89,-102,-128,-98,8,-92,8,8,-129,-87,-103,-204,-131,-94,-99,-101,-132,8,-75,8,-186,8,-211,8,-130,8,8,-106,-123,-205,-76,8,-209,-187,-210,-182,8,8,-133,8,-135,-138,8,8,-109,8,8,-208,-183,-184,8,-134,-137,8,8,-136,-105,-110,8,-121,8,-185,8,-111,-104,-122,]),'R_BRACE':([38,46,49,63,70,72,73,77,79,81,83,85,87,89,90,92,93,94,95,96,97,99,101,102,103,104,106,109,110,113,115,117,118,119,126,127,131,142,143,146,147,148,151,156,163,164,167,170,171,172,194,196,202,206,209,210,217,237,238,239,243,244,248,250,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,273,274,275,277,278,279,280,281,282,283,284,285,288,303,306,307,308,309,314,316,318,320,321,331,332,334,335,339,340,344,347,348,349,],[-75,-186,101,-76,-187,-5,-59,-57,-174,-173,-15,-176,170,-190,-29,-27,-188,-55,-36,-175,-49,-33,-182,-177,-2,-72,-53,-51,-178,-3,-39,-47,210,-44,-74,-1,-27,-109,236,-126,241,-124,-168,-17,-12,-11,-191,-183,-189,-202,-18,-16,-200,-201,281,-184,-19,-110,304,305,308,-171,-56,-7,-9,316,-10,-73,-203,-60,-54,-35,-34,-48,-31,-30,-32,-179,-52,-4,-50,-199,-38,-37,-46,-45,-185,-43,-42,-40,-41,-181,-111,-127,-125,-169,331,-8,-6,-28,-180,-20,-170,-172,-195,-58,-194,-192,-197,-196,-198,-193,]),'DIVIDE':([72,83,90,92,99,100,103,113,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,314,316,318,321,],[-5,-15,-29,-27,190,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,190,190,-31,-30,-32,-4,-8,-6,-28,-20,]),'EQ_OP':([72,83,90,92,95,99,100,103,113,115,117,119,127,131,156,163,164,194,196,217,250,253,255,261,262,263,264,265,266,273,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,-39,208,-44,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,208,-31,-30,-32,-4,-38,-37,-46,-45,-43,-42,-40,-41,-8,-6,-28,-20,]),'AND_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,179,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'ADD_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,175,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'FOR':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,78,-76,-187,78,-174,-173,-176,78,-190,-188,-175,-182,-177,-178,78,-191,-183,-189,-202,78,-200,-201,78,-184,78,-203,-179,-199,-185,78,-181,78,78,78,-180,-195,78,-194,-192,-197,78,78,-196,-198,-193,]),'MOD_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,178,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'ELSE':([79,81,85,89,96,101,102,110,167,170,172,202,206,210,258,267,275,281,288,320,334,339,340,344,347,348,349,],[-174,-173,-176,-190,-175,-182,-177,-178,-191,-183,-202,-200,-201,-184,-203,-179,-199,-185,-181,-180,-195,-194,346,-197,-196,-198,-193,]),'EXOR':([72,83,90,92,95,97,99,100,103,109,113,115,117,119,127,131,156,163,164,194,196,217,250,253,255,261,262,263,264,265,266,268,273,274,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-49,-33,-1,-2,200,-3,-39,-47,-44,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,-48,-31,-30,-32,200,-4,-50,-38,-37,-46,-45,-43,-42,-40,-41,-8,-6,-28,-20,]),'TIMES':([0,1,2,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,31,32,33,37,38,42,44,45,46,48,49,51,52,54,55,58,59,61,62,63,64,66,67,70,71,72,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,96,98,99,100,101,102,103,105,107,108,110,113,118,120,121,122,123,127,128,131,133,139,140,141,150,153,155,156,157,158,159,160,161,163,164,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,223,224,230,232,235,236,240,241,249,250,253,255,258,261,262,264,265,266,267,269,272,273,275,281,286,288,296,301,302,304,305,309,310,311,312,313,314,315,316,317,318,319,320,321,334,336,339,340,344,345,346,347,348,349,],[10,-206,-207,10,-97,-91,-90,-95,-88,10,-96,-100,10,-93,-89,-102,-128,-98,-81,-92,-77,-79,-129,-87,-103,-204,-94,-99,-101,10,-75,-143,10,10,-186,-211,80,-82,-78,-80,80,-106,-123,-205,10,-76,80,-209,-144,-187,-210,-5,80,80,-174,-22,-173,-21,-15,-176,80,-23,-190,-29,80,-27,-188,-175,-25,191,-1,-182,-177,-2,80,80,80,-178,-3,80,80,-26,80,-24,-1,80,-27,10,-115,10,-113,80,-208,80,-17,80,80,80,80,80,-12,-11,80,-191,80,80,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,80,80,80,80,80,80,80,80,80,-18,80,-16,10,80,-200,80,80,80,-201,80,80,80,-184,80,80,80,80,80,-19,80,10,80,-114,80,-112,-105,80,-121,80,-7,-9,-10,-203,191,191,-31,-30,-32,-179,80,10,-4,-199,-185,80,-181,80,80,10,-104,-122,80,80,80,80,80,-8,80,-6,80,-28,80,-180,-20,-195,80,-194,-192,-197,80,80,-196,-198,-193,]),'$end':([1,2,28,37,38,48,61,63,66,71,101,153,170,210,281,],[-206,-207,-204,0,-75,-211,-205,-76,-209,-210,-182,-208,-183,-184,-185,]),'MUL_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,183,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'AND':([38,46,49,55,63,64,70,72,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,105,107,108,110,113,115,117,118,119,120,121,122,123,127,128,131,150,155,156,157,158,159,160,161,163,164,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,224,232,240,249,250,253,255,258,261,262,263,264,265,266,267,269,273,274,275,277,278,279,280,281,282,283,284,285,286,288,296,301,309,310,311,312,313,314,315,316,317,318,319,320,321,334,336,339,340,344,345,346,347,348,349,],[-75,-186,82,82,-76,82,-187,-5,82,82,-174,-22,-173,-21,-15,-176,82,-23,-190,-29,82,-27,-188,-36,-175,189,-25,-33,-1,-182,-177,-2,82,82,82,-178,-3,-39,-47,82,-44,82,-26,82,-24,-1,82,-27,82,82,-17,82,82,82,82,82,-12,-11,82,-191,82,82,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,82,82,82,82,82,82,82,82,82,-18,82,-16,82,-200,82,82,82,-201,82,82,82,-184,82,82,82,82,82,-19,82,82,82,82,82,-7,-9,-10,-203,-35,-34,-48,-31,-30,-32,-179,82,-4,189,-199,-38,-37,-46,-45,-185,-43,-42,-40,-41,82,-181,82,82,82,82,82,82,82,-8,82,-6,82,-28,82,-180,-20,-195,82,-194,-192,-197,82,82,-196,-198,-193,]),'COMMA':([5,6,7,8,9,10,12,13,15,16,17,18,19,20,21,22,24,25,26,27,29,31,32,33,35,39,40,41,42,43,44,51,52,53,54,58,59,67,68,69,72,73,77,83,84,90,92,94,95,97,99,100,103,104,106,109,113,115,117,119,125,126,127,129,131,132,133,134,135,136,138,146,147,148,149,151,152,156,163,164,173,194,196,199,217,219,221,222,225,226,227,229,231,233,234,236,239,241,243,244,246,247,248,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,268,273,274,276,277,278,279,280,282,283,284,285,289,292,293,295,298,300,304,305,306,307,308,314,316,318,321,322,323,324,325,328,329,330,331,332,333,335,337,338,341,342,],[-97,-91,-90,-95,-88,-139,-96,-100,-93,-89,-102,-128,-98,-81,-92,-77,-79,-129,-87,-103,-131,-94,-99,-101,-132,62,-83,-85,-143,-141,-140,-82,-78,-130,-80,-106,-123,-144,-142,-85,-5,-59,-57,-15,168,-29,-27,-55,-36,-49,-33,-1,-2,-72,-53,-51,-3,-39,-47,-44,-133,-74,-1,-135,-27,220,-151,228,-147,-152,-138,-126,242,-124,-84,-168,-86,-17,-12,-11,168,-18,-16,168,-19,-134,-137,-150,-156,-149,-157,-136,-116,-118,302,-105,242,-121,309,-171,168,168,-56,-7,-13,315,-9,168,-10,-73,168,-60,-54,-35,-34,-48,-31,-30,-32,-52,-4,-50,168,-38,-37,-46,-45,-43,-42,-40,-41,-153,-164,-160,-158,-148,-119,-104,-122,-127,-125,-169,-8,-6,-28,-20,-159,-165,-161,-162,-166,-120,-117,-170,-172,168,-58,168,-14,-163,-167,]),'INC_OP':([38,46,49,55,63,64,70,72,74,75,79,80,81,82,83,85,87,88,89,91,93,96,98,100,101,102,103,105,107,108,110,113,118,120,121,122,123,127,128,150,155,157,158,159,160,161,163,164,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,224,232,240,249,250,253,255,258,267,269,273,275,281,286,288,296,301,309,310,311,312,313,314,315,316,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,107,107,-76,107,-187,-5,107,107,-174,-22,-173,-21,164,-176,107,-23,-190,107,-188,-175,-25,-1,-182,-177,-2,107,107,107,-178,-3,107,107,-26,107,-24,-1,107,107,107,107,107,107,107,107,-12,-11,107,-191,107,107,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,107,107,107,107,107,107,107,107,107,107,107,-200,107,107,107,-201,107,107,107,-184,107,107,107,107,107,107,107,107,107,107,-7,-9,-10,-203,-179,107,-4,-199,-185,107,-181,107,107,107,107,107,107,107,-8,107,-6,107,107,-180,-195,107,-194,-192,-197,107,107,-196,-198,-193,]),'LONG':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[12,-206,-207,-97,-91,-90,-95,-88,12,-96,-100,-93,-89,-102,-128,-98,12,-92,12,12,-129,-87,-103,-204,-131,-94,-99,-101,-132,12,-75,12,-186,12,-211,12,-130,12,12,-106,-123,-205,-76,12,-209,-187,-210,-182,12,12,-133,12,-135,-138,12,12,-109,12,12,-208,-183,-184,12,-134,-137,12,12,-136,-105,-110,12,-121,12,-185,12,-111,-104,-122,]),'SIGNED':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[13,-206,-207,-97,-91,-90,-95,-88,13,-96,-100,-93,-89,-102,-128,-98,13,-92,13,13,-129,-87,-103,-204,-131,-94,-99,-101,-132,13,-75,13,-186,13,-211,13,-130,13,13,-106,-123,-205,-76,13,-209,-187,-210,-182,13,13,-133,13,-135,-138,13,13,-109,13,13,-208,-183,-184,13,-134,-137,13,13,-136,-105,-110,13,-121,13,-185,13,-111,-104,-122,]),'DIV_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,184,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'L_BRACKET':([0,1,2,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,37,38,42,43,44,45,46,48,49,51,52,53,54,55,58,59,61,62,63,64,66,67,68,70,71,72,74,75,76,78,79,80,81,82,83,85,86,87,88,89,91,93,96,98,100,101,102,103,105,107,108,110,113,114,118,120,121,122,123,125,127,128,129,133,138,139,140,141,150,153,155,157,158,159,160,161,163,164,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,198,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,219,221,223,224,225,227,229,230,232,235,236,240,241,245,249,250,253,255,258,267,269,271,272,273,275,281,286,288,292,293,295,296,301,302,304,305,309,310,311,312,313,314,315,316,317,319,320,322,323,324,325,328,334,336,339,340,341,342,344,345,346,347,348,349,],[14,-206,-207,14,-97,-91,-90,-95,-88,-139,-96,-100,14,-93,-89,-102,-128,-98,-81,-92,-77,14,-79,-129,-87,-103,-204,56,-94,-99,-101,-132,14,-75,-143,-141,-140,14,-186,-211,108,-82,-78,56,-80,128,-106,-123,-205,14,-76,108,-209,-144,-142,-187,-210,-5,108,155,157,160,-174,-22,-173,-21,161,-176,169,108,-23,-190,108,-188,-175,-25,-1,-182,-177,-2,128,155,108,-178,-3,203,108,128,-26,216,-24,-133,-1,108,-135,223,-138,-115,14,-113,108,-208,108,108,108,128,108,108,-12,-11,108,-191,108,108,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,108,128,128,128,128,128,128,128,108,128,272,128,-200,108,128,128,-201,128,128,108,-184,128,128,128,128,108,108,-134,-137,223,128,223,297,-136,-114,128,-112,-105,128,-121,310,108,-7,-9,-10,-203,-179,128,272,272,-4,-199,-185,108,-181,-164,-160,297,128,128,14,-104,-122,108,108,108,128,108,-8,108,-6,108,108,-180,-159,-165,-161,-162,-166,-195,108,-194,-192,-163,-167,-197,108,108,-196,-198,-193,]),'GE_OP':([72,83,90,92,95,99,100,103,113,115,119,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,-39,211,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,-31,-30,-32,-4,-38,-37,211,211,-43,-42,-40,-41,-8,-6,-28,-20,]),'BREAK':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,116,-76,-187,116,-174,-173,-176,116,-190,-188,-175,-182,-177,-178,116,-191,-183,-189,-202,116,-200,-201,116,-184,116,-203,-179,-199,-185,116,-181,116,116,116,-180,-195,116,-194,-192,-197,116,116,-196,-198,-193,]),'SUP':([72,83,90,92,95,99,100,103,113,115,119,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,-39,214,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,-31,-30,-32,-4,-38,-37,214,214,-43,-42,-40,-41,-8,-6,-28,-20,]),'R_HOOK':([55,72,77,83,90,94,95,97,99,103,106,109,113,115,117,119,126,127,130,131,156,163,164,194,196,217,224,248,250,253,255,260,261,262,263,264,265,266,268,273,274,277,278,279,280,282,283,284,285,294,296,314,316,318,321,326,335,],[129,-5,-57,-15,-29,-55,-36,-49,-33,-2,-53,-51,-3,-39,-47,-44,-74,-1,219,-27,-17,-12,-11,-18,-16,-19,293,-56,-7,-9,-10,-54,-35,-34,-48,-31,-30,-32,-52,-4,-50,-38,-37,-46,-45,-43,-42,-40,-41,324,325,-8,-6,-28,-20,341,-58,]),'CHAR':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[15,-206,-207,-97,-91,-90,-95,-88,15,-96,-100,-93,-89,-102,-128,-98,15,-92,15,15,-129,-87,-103,-204,-131,-94,-99,-101,-132,15,-75,15,-186,15,-211,15,-130,15,15,-106,-123,-205,-76,15,-209,-187,-210,-182,15,15,-133,15,-135,-138,15,15,-109,15,15,-208,-183,-184,15,-134,-137,15,15,-136,-105,-110,15,-121,15,-185,15,-111,-104,-122,]),'STATIC':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,58,59,61,63,65,66,70,71,101,118,125,129,138,153,170,210,219,221,223,228,229,236,241,272,281,297,304,305,],[16,-206,-207,-97,-91,-90,-95,-88,16,-96,-100,-93,-89,-102,-128,-98,16,-92,16,16,-129,-87,-103,-204,-131,-94,-99,-101,-132,16,-75,16,-186,16,-211,16,-130,16,-106,-123,-205,-76,16,-209,-187,-210,-182,16,-133,-135,-138,-208,-183,-184,-134,-137,16,16,-136,-105,-121,16,-185,16,-104,-122,]),'GOTO':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,111,-76,-187,111,-174,-173,-176,111,-190,-188,-175,-182,-177,-178,111,-191,-183,-189,-202,111,-200,-201,111,-184,111,-203,-179,-199,-185,111,-181,111,111,111,-180,-195,111,-194,-192,-197,111,111,-196,-198,-193,]),'SWITCH':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,86,-76,-187,86,-174,-173,-176,86,-190,-188,-175,-182,-177,-178,86,-191,-183,-189,-202,86,-200,-201,86,-184,86,-203,-179,-199,-185,86,-181,86,86,86,-180,-195,86,-194,-192,-197,86,86,-196,-198,-193,]),'EQUALS':([29,35,41,53,69,72,83,92,100,103,113,125,127,129,131,138,146,156,163,164,194,196,217,219,221,229,250,253,255,273,314,316,318,321,],[-131,-132,64,-130,64,-5,-15,176,-1,-2,-3,-133,-1,-135,-27,-138,240,-17,-12,-11,-18,-16,-19,-134,-137,-136,-7,-9,-10,-4,-8,-6,-28,-20,]),'ELLIPSIS':([228,],[299,]),'CONTINUE':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,112,-76,-187,112,-174,-173,-176,112,-190,-188,-175,-182,-177,-178,112,-191,-183,-189,-202,112,-200,-201,112,-184,112,-203,-179,-199,-185,112,-181,112,112,112,-180,-195,112,-194,-192,-197,112,112,-196,-198,-193,]),'STRING_LITERAL':([38,46,49,55,63,64,70,74,75,79,80,81,82,85,87,88,89,91,93,96,98,101,102,105,107,108,110,118,120,121,122,123,128,150,155,157,158,159,160,161,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,224,232,240,249,258,267,269,275,281,286,288,296,301,309,310,311,312,313,315,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,113,113,-76,113,-187,113,113,-174,-22,-173,-21,-176,113,-23,-190,113,-188,-175,-25,-182,-177,113,113,113,-178,113,113,-26,113,-24,113,113,113,113,113,113,113,113,113,-191,113,113,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,113,113,113,113,113,113,113,113,113,113,113,-200,113,113,113,-201,113,113,113,-184,113,113,113,113,113,113,113,113,113,113,-203,-179,113,-199,-185,113,-181,113,113,113,113,113,113,113,113,113,113,-180,-195,113,-194,-192,-197,113,113,-196,-198,-193,]),'IF':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,114,-76,-187,114,-174,-173,-176,114,-190,-188,-175,-182,-177,-178,114,-191,-183,-189,-202,114,-200,-201,114,-184,114,-203,-179,-199,-185,114,-181,114,114,114,-180,-195,114,-194,-192,-197,114,114,-196,-198,-193,]),'CONSTANT':([38,46,49,55,63,64,70,74,75,79,80,81,82,85,87,88,89,91,93,96,98,101,102,105,107,108,110,118,120,121,122,123,128,150,155,157,158,159,160,161,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,224,232,240,249,258,267,269,275,281,286,288,296,301,309,310,311,312,313,315,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,103,103,-76,103,-187,103,103,-174,-22,-173,-21,-176,103,-23,-190,103,-188,-175,-25,-182,-177,103,103,103,-178,103,103,-26,103,-24,103,103,103,103,103,103,103,103,103,-191,103,103,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,103,103,103,103,103,103,103,103,103,103,103,-200,103,103,103,-201,103,103,103,-184,103,103,103,103,103,103,103,103,103,103,-203,-179,103,-199,-185,103,-181,103,103,103,103,103,103,103,103,103,103,-180,-195,103,-194,-192,-197,103,103,-196,-198,-193,]),'CONST':([0,1,2,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,42,44,46,47,48,49,53,56,57,58,59,61,63,65,66,67,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[18,-206,-207,-97,-91,-90,-95,-88,18,18,-96,-100,-93,-89,-102,-128,-98,18,-92,18,18,-129,-87,-103,-204,-131,-94,-99,-101,-132,18,-75,18,-143,18,-186,18,-211,18,-130,18,18,-106,-123,-205,-76,18,-209,-144,-187,-210,-182,18,18,-133,18,-135,-138,18,18,-109,18,18,-208,-183,-184,18,-134,-137,18,18,-136,-105,-110,18,-121,18,-185,18,-111,-104,-122,]),'OR_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,180,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'FLOAT':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[19,-206,-207,-97,-91,-90,-95,-88,19,-96,-100,-93,-89,-102,-128,-98,19,-92,19,19,-129,-87,-103,-204,-131,-94,-99,-101,-132,19,-75,19,-186,19,-211,19,-130,19,19,-106,-123,-205,-76,19,-209,-187,-210,-182,19,19,-133,19,-135,-138,19,19,-109,19,19,-208,-183,-184,19,-134,-137,19,19,-136,-105,-110,19,-121,19,-185,19,-111,-104,-122,]),'XOR_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,181,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'AND_OP':([72,83,90,92,94,95,97,99,100,103,106,109,113,115,117,119,127,131,156,163,164,194,196,217,248,250,253,255,260,261,262,263,264,265,266,268,273,274,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,186,-36,-49,-33,-1,-2,-53,-51,-3,-39,-47,-44,-1,-27,-17,-12,-11,-18,-16,-19,186,-7,-9,-10,-54,-35,-34,-48,-31,-30,-32,-52,-4,-50,-38,-37,-46,-45,-43,-42,-40,-41,-8,-6,-28,-20,]),'EXTERN':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,58,59,61,63,65,66,70,71,101,118,125,129,138,153,170,210,219,221,223,228,229,236,241,272,281,297,304,305,],[9,-206,-207,-97,-91,-90,-95,-88,9,-96,-100,-93,-89,-102,-128,-98,9,-92,9,9,-129,-87,-103,-204,-131,-94,-99,-101,-132,9,-75,9,-186,9,-211,9,-130,9,-106,-123,-205,-76,9,-209,-187,-210,-182,9,-133,-135,-138,-208,-183,-184,-134,-137,9,9,-136,-105,-121,9,-185,9,-104,-122,]),'VOID':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[21,-206,-207,-97,-91,-90,-95,-88,21,-96,-100,-93,-89,-102,-128,-98,21,-92,21,21,-129,-87,-103,-204,-131,-94,-99,-101,-132,21,-75,21,-186,21,-211,21,-130,21,21,-106,-123,-205,-76,21,-209,-187,-210,-182,21,21,-133,21,-135,-138,21,21,-109,21,21,-208,-183,-184,21,-134,-137,21,21,-136,-105,-110,21,-121,21,-185,21,-111,-104,-122,]),'AUTO':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,58,59,61,63,65,66,70,71,101,118,125,129,138,153,170,210,219,221,223,228,229,236,241,272,281,297,304,305,],[7,-206,-207,-97,-91,-90,-95,-88,7,-96,-100,-93,-89,-102,-128,-98,7,-92,7,7,-129,-87,-103,-204,-131,-94,-99,-101,-132,7,-75,7,-186,7,-211,7,-130,7,-106,-123,-205,-76,7,-209,-187,-210,-182,7,-133,-135,-138,-208,-183,-184,-134,-137,7,7,-136,-105,-121,7,-185,7,-104,-122,]),'SEMICOLON':([4,5,6,7,8,9,12,13,15,16,17,18,19,20,21,22,24,25,26,27,29,31,32,33,35,38,39,40,41,45,46,49,51,52,53,54,58,59,63,69,70,72,73,74,77,79,81,83,84,85,87,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,106,109,110,112,113,115,116,117,118,119,125,126,127,129,131,138,149,151,152,156,160,163,164,167,170,171,172,173,193,194,196,201,202,206,209,210,217,218,219,221,229,231,233,234,236,241,248,249,250,253,255,256,258,259,260,261,262,263,264,265,266,267,268,273,274,275,277,278,279,280,281,282,283,284,285,286,288,300,304,305,308,311,314,316,317,318,319,320,321,329,330,331,334,335,336,339,340,343,344,345,346,347,348,349,],[38,-97,-91,-90,-95,-88,-96,-100,-93,-89,-102,-128,-98,-81,-92,-77,-79,-129,-87,-103,-131,-94,-99,-101,-132,-75,63,-83,-85,38,-186,89,-82,-78,-130,-80,-106,-123,-76,-85,-187,-5,-59,89,-57,-174,-173,-15,167,-176,89,-190,-29,172,-27,-188,-55,-36,-175,-49,-33,-1,-182,-177,-2,-72,-53,-51,-178,202,-3,-39,206,-47,89,-44,-133,-74,-1,-135,-27,-138,-84,-168,-86,-17,89,-12,-11,-191,-183,-189,-202,258,89,-18,-16,275,-200,-201,89,-184,-19,89,-134,-137,-136,-116,-118,303,-105,-121,-56,89,-7,-9,-10,-73,-203,-60,-54,-35,-34,-48,-31,-30,-32,-179,-52,-4,-50,-199,-38,-37,-46,-45,-185,-43,-42,-40,-41,89,-181,-119,-104,-122,-169,89,-8,-6,89,-28,89,-180,-20,-120,-117,-170,-195,-58,89,-194,-192,347,-197,89,89,-196,-198,-193,]),'POINT':([72,83,100,103,113,127,163,164,250,253,255,273,314,316,],[-5,162,-1,-2,-3,-1,-12,-11,-7,-9,-10,-4,-8,-6,]),'LE_OP':([72,83,90,92,95,99,100,103,113,115,119,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,-39,212,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,-31,-30,-32,-4,-38,-37,212,212,-43,-42,-40,-41,-8,-6,-28,-20,]),'INTER':([72,77,83,90,92,94,95,97,99,100,103,106,109,113,115,117,119,127,131,156,163,164,194,196,217,248,250,253,255,260,261,262,263,264,265,266,268,273,274,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,158,-15,-29,-27,-55,-36,-49,-33,-1,-2,-53,-51,-3,-39,-47,-44,-1,-27,-17,-12,-11,-18,-16,-19,-56,-7,-9,-10,-54,-35,-34,-48,-31,-30,-32,-52,-4,-50,-38,-37,-46,-45,-43,-42,-40,-41,-8,-6,-28,-20,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,42,43,44,45,46,48,49,51,52,54,55,56,58,59,60,61,62,63,64,66,67,68,70,71,74,75,79,80,81,82,85,87,88,89,91,93,96,98,101,102,105,107,108,110,111,118,120,121,122,123,128,133,139,140,141,145,150,153,155,157,158,159,160,161,162,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,220,223,224,225,230,232,235,236,240,241,242,249,258,267,269,275,281,286,288,296,301,302,304,305,309,310,311,312,313,315,317,319,320,334,336,339,340,344,345,346,347,348,349,],[35,-206,-207,-108,35,-97,-91,-90,-95,-88,-139,-96,-100,35,-93,-89,-102,-128,-98,-81,-92,-77,35,-79,-129,-87,-103,-204,-107,-94,-99,-101,58,59,35,-75,-143,-141,-140,35,-186,-211,100,-82,-78,-80,127,136,-106,-123,146,-205,35,-76,127,-209,-144,-142,-187,-210,100,127,-174,-22,-173,-21,-176,100,-23,-190,127,-188,-175,-25,-182,-177,127,127,127,-178,201,100,127,-26,127,-24,127,35,-115,35,-113,146,127,-208,127,127,127,127,127,127,253,127,255,-191,127,127,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,127,127,127,127,127,127,127,127,100,127,127,-200,127,127,127,-201,127,127,100,-184,127,127,127,127,127,100,289,35,127,35,-114,127,-112,-105,127,-121,146,127,-203,-179,127,-199,-185,100,-181,127,127,35,-104,-122,127,127,100,127,127,127,100,100,-180,-195,100,-194,-192,-197,100,100,-196,-198,-193,]),'VOLATILE':([0,1,2,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,42,44,46,47,48,49,53,56,57,58,59,61,63,65,66,67,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[25,-206,-207,-97,-91,-90,-95,-88,25,25,-96,-100,-93,-89,-102,-128,-98,25,-92,25,25,-129,-87,-103,-204,-131,-94,-99,-101,-132,25,-75,25,-143,25,-186,25,-211,25,-130,25,25,-106,-123,-205,-76,25,-209,-144,-187,-210,-182,25,25,-133,25,-135,-138,25,25,-109,25,25,-208,-183,-184,25,-134,-137,25,25,-136,-105,-110,25,-121,25,-185,25,-111,-104,-122,]),'TYPEDEF':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,58,59,61,63,65,66,70,71,101,118,125,129,138,153,170,210,219,221,223,228,229,236,241,272,281,297,304,305,],[26,-206,-207,-97,-91,-90,-95,-88,26,-96,-100,-93,-89,-102,-128,-98,26,-92,26,26,-129,-87,-103,-204,-131,-94,-99,-101,-132,26,-75,26,-186,26,-211,26,-130,26,-106,-123,-205,-76,26,-209,-187,-210,-182,26,-133,-135,-138,-208,-183,-184,-134,-137,26,26,-136,-105,-121,26,-185,26,-104,-122,]),'RIGHT_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,174,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'OR_OP':([72,77,83,90,92,94,95,97,99,100,103,106,109,113,115,117,119,127,131,156,163,164,194,196,217,248,250,253,255,260,261,262,263,264,265,266,268,273,274,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,159,-15,-29,-27,-55,-36,-49,-33,-1,-2,-53,-51,-3,-39,-47,-44,-1,-27,-17,-12,-11,-18,-16,-19,-56,-7,-9,-10,-54,-35,-34,-48,-31,-30,-32,-52,-4,-50,-38,-37,-46,-45,-43,-42,-40,-41,-8,-6,-28,-20,]),'CASE':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,120,-76,-187,120,-174,-173,-176,120,-190,-188,-175,-182,-177,-178,120,-191,-183,-189,-202,120,-200,-201,120,-184,120,-203,-179,-199,-185,120,-181,120,120,120,-180,-195,120,-194,-192,-197,120,120,-196,-198,-193,]),'NOT':([38,46,49,55,63,64,70,74,75,79,80,81,82,85,87,88,89,91,93,96,98,101,102,105,107,108,110,118,120,121,122,123,128,150,155,157,158,159,160,161,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,224,232,240,249,258,267,269,275,281,286,288,296,301,309,310,311,312,313,315,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,121,121,-76,121,-187,121,121,-174,-22,-173,-21,-176,121,-23,-190,121,-188,-175,-25,-182,-177,121,121,121,-178,121,121,-26,121,-24,121,121,121,121,121,121,121,121,121,-191,121,121,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,121,121,121,121,121,121,121,121,121,121,121,-200,121,121,121,-201,121,121,121,-184,121,121,121,121,121,121,121,121,121,121,-203,-179,121,-199,-185,121,-181,121,121,121,121,121,121,121,121,121,121,-180,-195,121,-194,-192,-197,121,121,-196,-198,-193,]),'NE_OP':([72,83,90,92,95,99,100,103,113,115,117,119,127,131,156,163,164,194,196,217,250,253,255,261,262,263,264,265,266,273,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,-39,207,-44,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,207,-31,-30,-32,-4,-38,-37,-46,-45,-43,-42,-40,-41,-8,-6,-28,-20,]),'PTR_OP':([72,83,100,103,113,127,163,164,250,253,255,273,314,316,],[-5,166,-1,-2,-3,-1,-12,-11,-7,-9,-10,-4,-8,-6,]),'INF':([72,83,90,92,95,99,100,103,113,115,119,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,277,278,279,280,282,283,284,285,314,316,318,321,],[-5,-15,-29,-27,-36,-33,-1,-2,-3,-39,213,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-35,-34,-31,-30,-32,-4,-38,-37,213,213,-43,-42,-40,-41,-8,-6,-28,-20,]),'STRUCT':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[30,-206,-207,-97,-91,-90,-95,-88,30,-96,-100,-93,-89,-102,-128,-98,30,-92,30,30,-129,-87,-103,-204,-131,-94,-99,-101,-132,30,-75,30,-186,30,-211,30,-130,30,30,-106,-123,-205,-76,30,-209,-187,-210,-182,30,30,-133,30,-135,-138,30,30,-109,30,30,-208,-183,-184,30,-134,-137,30,30,-136,-105,-110,30,-121,30,-185,30,-111,-104,-122,]),'COLON':([5,8,12,13,15,17,18,19,21,25,27,29,31,32,33,35,53,58,59,72,73,77,83,90,92,94,95,97,99,100,103,104,106,109,113,115,117,119,124,125,126,127,129,131,138,139,140,141,156,163,164,194,196,215,217,219,221,229,230,233,235,236,241,247,248,250,253,255,256,259,260,261,262,263,264,265,266,268,273,274,277,278,279,280,282,283,284,285,302,304,305,314,316,318,321,335,],[-97,-95,-96,-100,-93,-102,-128,-98,-92,-129,-103,-131,-94,-99,-101,-132,-130,-106,-123,-5,-59,-57,-15,-29,-27,-55,-36,-49,-33,193,-2,-72,-53,-51,-3,-39,-47,-44,218,-133,-74,-1,-135,-27,-138,-115,232,-113,-17,-12,-11,-18,-16,286,-19,-134,-137,-136,-114,301,-112,-105,-121,312,-56,-7,-9,-10,-73,-60,-54,-35,-34,-48,-31,-30,-32,-52,-4,-50,-38,-37,-46,-45,-43,-42,-40,-41,232,-104,-122,-8,-6,-28,-20,-58,]),'SHORT':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[31,-206,-207,-97,-91,-90,-95,-88,31,-96,-100,-93,-89,-102,-128,-98,31,-92,31,31,-129,-87,-103,-204,-131,-94,-99,-101,-132,31,-75,31,-186,31,-211,31,-130,31,31,-106,-123,-205,-76,31,-209,-187,-210,-182,31,31,-133,31,-135,-138,31,31,-109,31,31,-208,-183,-184,31,-134,-137,31,31,-136,-105,-110,31,-121,31,-185,31,-111,-104,-122,]),'R_BRACKET':([5,6,7,8,9,10,12,13,15,16,17,18,19,20,21,22,24,25,26,27,29,31,32,33,35,42,43,44,50,51,52,53,54,56,58,59,67,68,72,73,77,83,89,90,92,94,95,97,99,103,104,106,109,113,115,117,119,125,127,129,131,132,133,134,135,136,137,138,139,141,156,161,163,164,167,194,196,197,198,199,217,219,221,222,223,225,226,227,229,230,235,236,241,246,248,250,251,252,253,255,256,257,259,260,261,262,263,264,265,266,268,270,271,272,273,274,276,277,278,279,280,282,283,284,285,287,289,290,291,292,293,295,297,298,299,304,305,313,314,316,318,321,322,323,324,325,327,328,333,335,337,338,341,342,],[-97,-91,-90,-95,-88,-139,-96,-100,-93,-89,-102,-128,-98,-81,-92,-77,-79,-129,-87,-103,-131,-94,-99,-101,-132,-143,-141,-140,125,-82,-78,-130,-80,138,-106,-123,-144,-142,-5,-59,-57,-15,-190,-29,-27,-55,-36,-49,-33,-2,-72,-53,-51,-3,-39,-47,-44,-133,-1,-135,-27,221,-151,-145,-147,-152,229,-138,-115,-113,-17,250,-12,-11,-191,-18,-16,269,-154,273,-19,-134,-137,-150,292,-156,-149,-157,-136,-114,-112,-105,-121,311,-56,-7,-13,314,-9,-10,-73,317,-60,-54,-35,-34,-48,-31,-30,-32,-52,-155,-156,292,-4,-50,319,-38,-37,-46,-45,-43,-42,-40,-41,321,-153,322,323,-164,-160,-158,328,-148,-146,-104,-122,336,-8,-6,-28,-20,-159,-165,-161,-162,342,-166,343,-58,345,-14,-163,-167,]),'DOUBLE':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[32,-206,-207,-97,-91,-90,-95,-88,32,-96,-100,-93,-89,-102,-128,-98,32,-92,32,32,-129,-87,-103,-204,-131,-94,-99,-101,-132,32,-75,32,-186,32,-211,32,-130,32,32,-106,-123,-205,-76,32,-209,-187,-210,-182,32,32,-133,32,-135,-138,32,32,-109,32,32,-208,-183,-184,32,-134,-137,32,32,-136,-105,-110,32,-121,32,-185,32,-111,-104,-122,]),'SUB_ASSIGN':([72,83,92,100,103,113,127,131,156,163,164,194,196,217,250,253,255,273,314,316,318,321,],[-5,-15,182,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,-4,-8,-6,-28,-20,]),'UNSIGNED':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[33,-206,-207,-97,-91,-90,-95,-88,33,-96,-100,-93,-89,-102,-128,-98,33,-92,33,33,-129,-87,-103,-204,-131,-94,-99,-101,-132,33,-75,33,-186,33,-211,33,-130,33,33,-106,-123,-205,-76,33,-209,-187,-210,-182,33,33,-133,33,-135,-138,33,33,-109,33,33,-208,-183,-184,33,-134,-137,33,33,-136,-105,-110,33,-121,33,-185,33,-111,-104,-122,]),'MOD':([72,83,90,92,99,100,103,113,127,131,156,163,164,194,196,217,250,253,255,261,262,264,265,266,273,314,316,318,321,],[-5,-15,-29,-27,192,-1,-2,-3,-1,-27,-17,-12,-11,-18,-16,-19,-7,-9,-10,192,192,-31,-30,-32,-4,-8,-6,-28,-20,]),'ENUM':([0,1,2,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,35,37,38,41,46,47,48,49,53,56,57,58,59,61,63,65,66,70,71,101,108,118,125,128,129,138,139,141,142,143,144,153,170,210,216,219,221,223,228,229,236,237,238,241,272,281,297,303,304,305,],[36,-206,-207,-97,-91,-90,-95,-88,36,-96,-100,-93,-89,-102,-128,-98,36,-92,36,36,-129,-87,-103,-204,-131,-94,-99,-101,-132,36,-75,36,-186,36,-211,36,-130,36,36,-106,-123,-205,-76,36,-209,-187,-210,-182,36,36,-133,36,-135,-138,36,36,-109,36,36,-208,-183,-184,36,-134,-137,36,36,-136,-105,-110,36,-121,36,-185,36,-111,-104,-122,]),'L_BRACE':([3,11,29,30,34,35,36,38,41,46,47,49,53,58,59,63,64,65,70,72,74,79,81,83,85,87,89,93,96,100,101,102,103,110,113,118,125,127,129,138,150,163,164,167,170,171,172,193,202,206,209,210,218,219,221,229,250,253,255,258,267,273,275,281,286,288,309,311,314,316,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-108,49,-131,-107,57,-132,60,-75,49,-186,49,49,-130,144,145,-76,150,49,-187,-5,49,-174,-173,165,-176,49,-190,-188,-175,-1,-182,-177,-2,-178,-3,49,-133,-1,-135,-138,150,-12,-11,-191,-183,-189,-202,49,-200,-201,49,-184,49,-134,-137,-136,-7,-9,-10,-203,-179,-4,-199,-185,49,-181,150,49,-8,-6,49,49,-180,-195,49,-194,-192,-197,49,49,-196,-198,-193,]),'SIZEOF':([38,46,49,55,63,64,70,74,75,79,80,81,82,85,87,88,89,91,93,96,98,101,102,105,107,108,110,118,120,121,122,123,128,150,155,157,158,159,160,161,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,218,224,232,240,249,258,267,269,275,281,286,288,296,301,309,310,311,312,313,315,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,122,122,-76,122,-187,122,122,-174,-22,-173,-21,-176,122,-23,-190,122,-188,-175,-25,-182,-177,122,122,122,-178,122,122,-26,122,-24,122,122,122,122,122,122,122,122,122,-191,122,122,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,122,122,122,122,122,122,122,122,122,122,122,-200,122,122,122,-201,122,122,122,-184,122,122,122,122,122,122,122,122,122,122,-203,-179,122,-199,-185,122,-181,122,122,122,122,122,122,122,122,122,122,-180,-195,122,-194,-192,-197,122,122,-196,-198,-193,]),'MINUS':([38,46,49,55,63,64,70,72,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,95,96,98,99,100,101,102,103,105,107,108,110,113,118,120,121,122,123,127,128,131,150,155,156,157,158,159,160,161,163,164,165,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,224,232,240,249,250,253,255,258,261,262,264,265,266,267,269,273,275,277,278,281,286,288,296,301,309,310,311,312,313,314,315,316,317,318,319,320,321,334,336,339,340,344,345,346,347,348,349,],[-75,-186,123,123,-76,123,-187,-5,123,123,-174,-22,-173,-21,-15,-176,123,-23,-190,-29,123,-27,-188,187,-175,-25,-33,-1,-182,-177,-2,123,123,123,-178,-3,123,123,-26,123,-24,-1,123,-27,123,123,-17,123,123,123,123,123,-12,-11,123,-191,123,123,-183,-189,-202,-68,-65,-61,-67,-64,-69,-71,-70,-66,-62,-63,123,123,123,123,123,123,123,123,123,-18,123,-16,123,-200,123,123,123,-201,123,123,123,-184,123,123,123,123,123,-19,123,123,123,123,123,-7,-9,-10,-203,-35,-34,-31,-30,-32,-179,123,-4,-199,187,187,-185,123,-181,123,123,123,123,123,123,123,-8,123,-6,123,-28,123,-180,-20,-195,123,-194,-192,-197,123,123,-196,-198,-193,]),'DEFAULT':([38,46,49,63,70,74,79,81,85,87,89,93,96,101,102,110,118,167,170,171,172,193,202,206,209,210,218,258,267,275,281,286,288,311,317,319,320,334,336,339,340,344,345,346,347,348,349,],[-75,-186,124,-76,-187,124,-174,-173,-176,124,-190,-188,-175,-182,-177,-178,124,-191,-183,-189,-202,124,-200,-201,124,-184,124,-203,-179,-199,-185,124,-181,124,124,124,-180,-195,124,-194,-192,-197,124,124,-196,-198,-193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'primary_expression':([49,55,64,74,75,87,91,105,107,108,118,120,122,128,150,155,157,158,159,160,161,165,168,169,185,186,187,188,189,190,191,192,193,195,200,203,204,205,207,208,209,211,212,213,214,216,218,224,232,240,249,269,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'function_definition':([0,37,],[1,1,]),'conditional_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,160,161,165,168,169,185,193,203,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[73,126,73,73,73,73,73,73,126,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,126,126,126,73,73,126,126,73,73,73,335,73,73,73,73,73,73,73,]),'pointer':([0,4,10,14,37,44,45,62,133,140,198,223,272,302,],[23,23,43,23,23,68,23,23,225,23,271,225,271,23,]),'type_name':([108,128,216,],[197,197,287,]),'declaration_specifiers':([0,11,20,22,24,37,41,47,49,56,65,118,223,228,272,297,],[4,45,51,52,54,4,45,45,45,133,45,45,133,133,133,133,]),'abstract_declarator':([133,198,223,272,],[222,270,290,290,]),'struct_or_union':([0,11,20,22,24,37,41,47,49,56,57,65,108,118,128,139,141,143,144,216,223,228,238,272,297,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'parameter_list':([56,223,272,297,],[134,134,134,134,]),'logical_or_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,160,161,165,168,169,185,193,203,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'specifier_qualifier_list':([57,108,128,139,141,143,144,216,238,],[140,198,198,230,235,140,140,198,140,]),'constant_expression':([55,120,224,232,240,296,301,],[130,215,294,300,306,326,329,]),'init_declarator_list':([4,45,],[39,39,]),'iteration_statement':([49,74,87,118,193,209,218,286,311,317,319,336,345,346,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'assignment_operator':([92,],[185,]),'assignment_expression':([49,64,74,87,91,108,118,128,150,155,157,158,160,161,165,168,169,185,193,203,209,216,218,249,286,309,310,311,313,315,317,319,336,345,346,],[104,151,104,104,104,104,104,104,151,104,104,104,104,251,104,256,104,259,104,104,104,104,104,104,104,151,104,104,104,338,104,104,104,104,104,]),'initializer':([64,150,309,],[152,244,332,]),'unary_operator':([49,55,64,74,75,87,91,105,107,108,118,120,122,128,150,155,157,158,159,160,161,165,168,169,185,186,187,188,189,190,191,192,193,195,200,203,204,205,207,208,209,211,212,213,214,216,218,224,232,240,249,269,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'compound_statement':([11,41,47,49,65,74,87,118,193,209,218,286,311,317,319,336,345,346,],[48,66,71,79,153,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'labeled_statement':([49,74,87,118,193,209,218,286,311,317,319,336,345,346,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'argument_expression_list':([161,],[252,]),'inclusive_or_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,193,203,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,260,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'type_qualifier_list':([10,],[44,]),'declarator':([0,4,14,37,45,62,133,140,223,302,],[11,41,50,11,69,69,226,233,50,233,]),'postfix_expression':([49,55,64,74,75,87,91,105,107,108,118,120,122,128,150,155,157,158,159,160,161,165,168,169,185,186,187,188,189,190,191,192,193,195,200,203,204,205,207,208,209,211,212,213,214,216,218,224,232,240,249,269,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'relational_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,189,193,195,200,203,207,208,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,279,280,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'expression':([49,74,87,91,108,118,128,155,157,158,160,165,169,193,203,209,216,218,249,286,310,311,313,317,319,336,345,346,],[84,84,84,173,199,84,199,199,246,247,84,254,257,84,276,84,199,84,84,84,333,84,337,84,84,84,84,84,]),'struct_declaration_list':([57,144,],[143,238,]),'exclusive_or_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,193,195,203,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,268,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'identifier_list':([56,],[132,]),'jump_statement':([49,74,87,118,193,209,218,286,311,317,319,336,345,346,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'expression_statement':([49,74,87,118,160,193,209,218,249,286,311,317,319,336,345,346,],[96,96,96,96,249,96,96,96,313,96,96,96,96,96,96,96,]),'selection_statement':([49,74,87,118,193,209,218,286,311,317,319,336,345,346,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'additive_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,189,193,195,200,203,204,205,207,208,209,211,212,213,214,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,277,278,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'struct_or_union_specifier':([0,11,20,22,24,37,41,47,49,56,57,65,108,118,128,139,141,143,144,216,223,228,238,272,297,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'enumerator_list':([60,145,],[147,239,]),'shift_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,189,193,195,200,203,207,208,209,211,212,213,214,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,282,283,284,285,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'multiplicative_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,187,188,189,193,195,200,203,204,205,207,208,209,211,212,213,214,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,261,262,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'type_qualifier':([0,10,11,20,22,24,37,41,44,47,49,56,57,65,108,118,128,139,141,143,144,216,223,228,238,272,297,],[20,42,20,20,20,20,20,20,67,20,20,20,139,20,139,20,139,139,139,139,139,139,20,20,139,20,20,]),'statement_list':([49,118,],[87,209,]),'storage_class_specifier':([0,11,20,22,24,37,41,47,49,56,65,118,223,228,272,297,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'declaration':([0,11,37,41,47,49,65,118,],[2,46,2,46,70,46,70,70,]),'equality_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,189,193,195,200,203,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,263,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'parameter_type_list':([56,223,272,297,],[137,291,291,327,]),'declaration_list':([11,41,49,],[47,65,118,]),'type_specifier':([0,11,20,22,24,37,41,47,49,56,57,65,108,118,128,139,141,143,144,216,223,228,238,272,297,],[24,24,24,24,24,24,24,24,24,24,141,24,141,24,141,141,141,141,141,141,24,24,141,24,24,]),'cast_expression':([49,55,64,74,87,91,105,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,187,188,189,190,191,192,193,195,200,203,204,205,207,208,209,211,212,213,214,216,218,224,232,240,249,269,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[90,90,90,90,90,90,194,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,264,265,266,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,318,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'unary_expression':([49,55,64,74,75,87,91,105,107,108,118,120,122,128,150,155,157,158,159,160,161,165,168,169,185,186,187,188,189,190,191,192,193,195,200,203,204,205,207,208,209,211,212,213,214,216,218,224,232,240,249,269,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[92,131,92,92,156,92,92,131,196,92,92,131,217,92,92,92,92,92,131,92,92,92,92,92,92,131,131,131,131,131,131,131,92,131,131,92,131,131,131,131,92,131,131,131,131,92,92,131,131,131,92,131,92,131,131,92,92,92,131,92,92,92,92,92,92,92,]),'init_declarator':([4,45,62,],[40,40,149,]),'enum_specifier':([0,11,20,22,24,37,41,47,49,56,57,65,108,118,128,139,141,143,144,216,223,228,238,272,297,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'external_declaration':([0,37,],[28,61,]),'parameter_declaration':([56,223,228,272,297,],[135,135,298,135,135,]),'struct_declaration':([57,143,144,238,],[142,237,142,237,]),'direct_declarator':([0,4,14,23,37,45,62,133,140,223,225,302,],[29,29,29,53,29,29,29,29,29,29,53,29,]),'and_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,186,193,195,200,203,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,274,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'struct_declarator_list':([140,],[234,]),'statement':([49,74,87,118,193,209,218,286,311,317,319,336,345,346,],[93,154,171,93,267,171,288,320,334,339,340,344,348,349,]),'initializer_list':([150,],[243,]),'logical_and_expression':([49,55,64,74,87,91,108,118,120,128,150,155,157,158,159,160,161,165,168,169,185,193,203,209,216,218,224,232,240,249,286,296,301,309,310,311,312,313,315,317,319,336,345,346,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,248,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'struct_declarator':([140,302,],[231,330,]),'translation_unit':([0,],[37,]),'direct_abstract_declarator':([133,198,223,225,271,272,],[227,227,227,295,295,227,]),'enumerator':([60,145,242,],[148,148,307,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','lexer.py',264),
  ('primary_expression -> CONSTANT','primary_expression',1,'p_primary_expression','lexer.py',265),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','lexer.py',266),
  ('primary_expression -> L_BRACKET expression R_BRACKET','primary_expression',3,'p_primary_expression','lexer.py',267),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','lexer.py',277),
  ('postfix_expression -> postfix_expression L_BRACE expression R_BRACE','postfix_expression',4,'p_postfix_expression','lexer.py',278),
  ('postfix_expression -> postfix_expression L_BRACKET R_BRACKET','postfix_expression',3,'p_postfix_expression','lexer.py',279),
  ('postfix_expression -> postfix_expression L_BRACKET argument_expression_list R_BRACKET','postfix_expression',4,'p_postfix_expression','lexer.py',280),
  ('postfix_expression -> postfix_expression POINT IDENTIFIER','postfix_expression',3,'p_postfix_expression','lexer.py',281),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','lexer.py',282),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','lexer.py',283),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','lexer.py',284),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','lexer.py',292),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','lexer.py',293),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','lexer.py',301),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','lexer.py',302),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','lexer.py',303),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','lexer.py',304),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','lexer.py',305),
  ('unary_expression -> SIZEOF L_BRACKET type_name R_BRACKET','unary_expression',4,'p_unary_expression','lexer.py',306),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','lexer.py',314),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','lexer.py',315),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','lexer.py',316),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','lexer.py',317),
  ('unary_operator -> TILD','unary_operator',1,'p_unary_operator','lexer.py',318),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','lexer.py',319),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','lexer.py',327),
  ('cast_expression -> L_BRACKET type_name R_BRACKET cast_expression','cast_expression',4,'p_cast_expression','lexer.py',328),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','lexer.py',336),
  ('multiplicative_expression -> multiplicative_expression TIMES cast_expression','multiplicative_expression',3,'p_multiplicative_expression','lexer.py',337),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','lexer.py',338),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multiplicative_expression','lexer.py',339),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','lexer.py',347),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','lexer.py',348),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','lexer.py',349),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','lexer.py',357),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','lexer.py',358),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','lexer.py',359),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','lexer.py',367),
  ('relational_expression -> relational_expression INF shift_expression','relational_expression',3,'p_relational_expression','lexer.py',368),
  ('relational_expression -> relational_expression SUP shift_expression','relational_expression',3,'p_relational_expression','lexer.py',369),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','lexer.py',370),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','lexer.py',371),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','lexer.py',379),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','lexer.py',380),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','lexer.py',381),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','lexer.py',389),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression','lexer.py',390),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','lexer.py',398),
  ('exclusive_or_expression -> exclusive_or_expression EXOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','lexer.py',399),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','lexer.py',407),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','lexer.py',408),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','lexer.py',416),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','lexer.py',417),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','lexer.py',425),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','lexer.py',426),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','lexer.py',434),
  ('conditional_expression -> logical_or_expression INTER expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','lexer.py',435),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','lexer.py',443),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','lexer.py',444),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','lexer.py',452),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',453),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',454),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',455),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',456),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',457),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',458),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',459),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',460),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',461),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','lexer.py',462),
  ('expression -> assignment_expression','expression',1,'p_expression','lexer.py',470),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','lexer.py',471),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','lexer.py',479),
  ('declaration -> declaration_specifiers SEMICOLON','declaration',2,'p_declaration','lexer.py',487),
  ('declaration -> declaration_specifiers init_declarator_list SEMICOLON','declaration',3,'p_declaration','lexer.py',488),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','lexer.py',496),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','lexer.py',497),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','lexer.py',498),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','lexer.py',499),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','lexer.py',500),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','lexer.py',501),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','lexer.py',509),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','lexer.py',510),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','lexer.py',518),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','lexer.py',519),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','lexer.py',527),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','lexer.py',528),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','lexer.py',529),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','lexer.py',530),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','lexer.py',531),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','lexer.py',539),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','lexer.py',540),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','lexer.py',541),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','lexer.py',542),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','lexer.py',543),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','lexer.py',544),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','lexer.py',545),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','lexer.py',546),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','lexer.py',547),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','lexer.py',548),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','lexer.py',549),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','lexer.py',550),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER L_BRACE struct_declaration_list R_BRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier','lexer.py',560),
  ('struct_or_union_specifier -> struct_or_union L_BRACE struct_declaration_list R_BRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier','lexer.py',561),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','lexer.py',562),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','lexer.py',570),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','lexer.py',571),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','lexer.py',579),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','lexer.py',580),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON','struct_declaration',3,'p_struct_declaration','lexer.py',588),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','lexer.py',596),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','lexer.py',597),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','lexer.py',598),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','lexer.py',599),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','lexer.py',607),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','lexer.py',608),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','lexer.py',616),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','lexer.py',617),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','lexer.py',618),
  ('enum_specifier -> ENUM L_BRACE enumerator_list R_BRACE','enum_specifier',4,'p_enum_specifier','lexer.py',626),
  ('enum_specifier -> ENUM IDENTIFIER L_BRACE enumerator_list R_BRACE','enum_specifier',5,'p_enum_specifier','lexer.py',627),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','lexer.py',628),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','lexer.py',636),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','lexer.py',637),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','lexer.py',645),
  ('enumerator -> IDENTIFIER EQUALS constant_expression','enumerator',3,'p_enumerator','lexer.py',646),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','lexer.py',654),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','lexer.py',655),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','lexer.py',663),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','lexer.py',664),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','lexer.py',672),
  ('direct_declarator -> L_BRACKET declarator R_BRACKET','direct_declarator',3,'p_direct_declarator','lexer.py',673),
  ('direct_declarator -> direct_declarator L_HOOK constant_expression R_HOOK','direct_declarator',4,'p_direct_declarator','lexer.py',674),
  ('direct_declarator -> direct_declarator L_HOOK R_HOOK','direct_declarator',3,'p_direct_declarator','lexer.py',675),
  ('direct_declarator -> direct_declarator L_BRACKET parameter_type_list R_BRACKET','direct_declarator',4,'p_direct_declarator','lexer.py',676),
  ('direct_declarator -> direct_declarator L_BRACKET identifier_list R_BRACKET','direct_declarator',4,'p_direct_declarator','lexer.py',677),
  ('direct_declarator -> direct_declarator L_BRACKET R_BRACKET','direct_declarator',3,'p_direct_declarator','lexer.py',678),
  ('pointer -> TIMES','pointer',1,'p_pointer','lexer.py',686),
  ('pointer -> TIMES type_qualifier_list','pointer',2,'p_pointer','lexer.py',687),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','lexer.py',688),
  ('pointer -> TIMES type_qualifier_list pointer','pointer',3,'p_pointer','lexer.py',689),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','lexer.py',697),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','lexer.py',698),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','lexer.py',706),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','lexer.py',707),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','lexer.py',715),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','lexer.py',716),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','lexer.py',724),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','lexer.py',725),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','lexer.py',726),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','lexer.py',734),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','lexer.py',735),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','lexer.py',743),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','lexer.py',744),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','lexer.py',752),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','lexer.py',753),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','lexer.py',754),
  ('direct_abstract_declarator -> L_BRACKET abstract_declarator R_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','lexer.py',762),
  ('direct_abstract_declarator -> L_HOOK R_HOOK','direct_abstract_declarator',2,'p_direct_abstract_declarator','lexer.py',763),
  ('direct_abstract_declarator -> L_HOOK constant_expression R_HOOK','direct_abstract_declarator',3,'p_direct_abstract_declarator','lexer.py',764),
  ('direct_abstract_declarator -> direct_abstract_declarator L_HOOK R_HOOK','direct_abstract_declarator',3,'p_direct_abstract_declarator','lexer.py',765),
  ('direct_abstract_declarator -> direct_abstract_declarator L_HOOK constant_expression R_HOOK','direct_abstract_declarator',4,'p_direct_abstract_declarator','lexer.py',766),
  ('direct_abstract_declarator -> L_BRACKET R_BRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','lexer.py',767),
  ('direct_abstract_declarator -> L_BRACKET parameter_type_list R_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','lexer.py',768),
  ('direct_abstract_declarator -> direct_abstract_declarator L_BRACKET R_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','lexer.py',769),
  ('direct_abstract_declarator -> direct_abstract_declarator L_BRACKET parameter_type_list R_BRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','lexer.py',770),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','lexer.py',778),
  ('initializer -> L_BRACE initializer_list R_BRACE','initializer',3,'p_initializer','lexer.py',779),
  ('initializer -> L_BRACE initializer_list COMMA R_BRACE','initializer',4,'p_initializer','lexer.py',780),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','lexer.py',788),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','lexer.py',789),
  ('statement -> labeled_statement','statement',1,'p_statement','lexer.py',797),
  ('statement -> compound_statement','statement',1,'p_statement','lexer.py',798),
  ('statement -> expression_statement','statement',1,'p_statement','lexer.py',799),
  ('statement -> selection_statement','statement',1,'p_statement','lexer.py',800),
  ('statement -> iteration_statement','statement',1,'p_statement','lexer.py',801),
  ('statement -> jump_statement','statement',1,'p_statement','lexer.py',802),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement','lexer.py',810),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','lexer.py',811),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','lexer.py',812),
  ('compound_statement -> L_BRACE R_BRACE','compound_statement',2,'p_compound_statement','lexer.py',820),
  ('compound_statement -> L_BRACE statement_list R_BRACE','compound_statement',3,'p_compound_statement','lexer.py',821),
  ('compound_statement -> L_BRACE declaration_list R_BRACE','compound_statement',3,'p_compound_statement','lexer.py',822),
  ('compound_statement -> L_BRACE declaration_list statement_list R_BRACE','compound_statement',4,'p_compound_statement','lexer.py',823),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','lexer.py',831),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','lexer.py',832),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lexer.py',840),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lexer.py',841),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','lexer.py',849),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','lexer.py',850),
  ('selection_statement -> IF L_BRACKET expression R_BRACKET statement','selection_statement',5,'p_selection_statement','lexer.py',858),
  ('selection_statement -> IF L_BRACKET expression R_BRACKET statement ELSE statement','selection_statement',7,'p_selection_statement','lexer.py',859),
  ('selection_statement -> SWITCH L_BRACKET expression R_BRACKET statement','selection_statement',5,'p_selection_statement','lexer.py',860),
  ('iteration_statement -> WHILE L_BRACKET expression R_BRACKET statement','iteration_statement',5,'p_iteration_statement','lexer.py',868),
  ('iteration_statement -> DO statement WHILE L_BRACKET expression R_BRACKET SEMICOLON','iteration_statement',7,'p_iteration_statement','lexer.py',869),
  ('iteration_statement -> FOR L_BRACKET expression_statement expression_statement R_BRACKET statement','iteration_statement',6,'p_iteration_statement','lexer.py',870),
  ('iteration_statement -> FOR L_BRACKET expression_statement expression_statement expression R_BRACKET statement','iteration_statement',7,'p_iteration_statement','lexer.py',871),
  ('jump_statement -> GOTO IDENTIFIER SEMICOLON','jump_statement',3,'p_jump_statement','lexer.py',879),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','lexer.py',880),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','lexer.py',881),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','lexer.py',882),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','lexer.py',883),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','lexer.py',891),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','lexer.py',892),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','lexer.py',900),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','lexer.py',901),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','lexer.py',909),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','lexer.py',910),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','lexer.py',911),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','lexer.py',912),
]
